/* Generated by JTB 1.4.7 */
package msmb.parsers.multistateSpecies.syntaxtree;

import msmb.parsers.multistateSpecies.visitor.*;

/**
 * JTB node class for the production MultistateSpecies_SiteSingleElement_Range:<br>
 * Corresponding grammar:<br>
 * multistateSpecies_SiteSingleElement_Range_Limits -> MultistateSpecies_SiteSingleElement_Range_Limits()<br>
 * nodeListOptional -> ( " " )*<br>
 * nodeToken -> <RANGE_SEPARATOR><br>
 * nodeListOptional1 -> ( " " )*<br>
 * multistateSpecies_SiteSingleElement_Range_Limits1 -> MultistateSpecies_SiteSingleElement_Range_Limits()<br>
 */
public class MultistateSpecies_SiteSingleElement_Range implements INode {

  /** Child node 1 */
  public MultistateSpecies_SiteSingleElement_Range_Limits multistateSpecies_SiteSingleElement_Range_Limits;

  /** Child node 2 */
  public NodeListOptional nodeListOptional;

  /** Child node 3 */
  public NodeToken nodeToken;

  /** Child node 4 */
  public NodeListOptional nodeListOptional1;

  /** Child node 5 */
  public MultistateSpecies_SiteSingleElement_Range_Limits multistateSpecies_SiteSingleElement_Range_Limits1;

  /** The serial version UID */
  private static final long serialVersionUID = 147L;

  /**
   * Constructs the node with all its children nodes.
   *
   * @param n0 - first child node
   * @param n1 - next child node
   * @param n2 - next child node
   * @param n3 - next child node
   * @param n4 - next child node
   */
  public MultistateSpecies_SiteSingleElement_Range(final MultistateSpecies_SiteSingleElement_Range_Limits n0, final NodeListOptional n1, final NodeToken n2, final NodeListOptional n3, final MultistateSpecies_SiteSingleElement_Range_Limits n4) {
    multistateSpecies_SiteSingleElement_Range_Limits = n0;
    nodeListOptional = n1;
    nodeToken = n2;
    nodeListOptional1 = n3;
    multistateSpecies_SiteSingleElement_Range_Limits1 = n4;
  }

  /**
   * Accepts the IRetArguVisitor visitor.
   *
   * @param <R> the user return type
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   * @return a user chosen return information
   */
  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  /**
   * Accepts the IRetVisitor visitor.
   *
   * @param <R> the user return type
   * @param vis - the visitor
   * @return a user chosen return information
   */
  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  /**
   * Accepts the IVoidArguVisitor visitor.
   *
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   */
  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  /**
   * Accepts the IVoidVisitor visitor.
   *
   * @param vis - the visitor
   */
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
