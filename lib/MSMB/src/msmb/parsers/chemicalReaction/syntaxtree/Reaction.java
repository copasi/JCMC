/* Generated by JTB 1.4.7 */
package msmb.parsers.chemicalReaction.syntaxtree;

import msmb.parsers.chemicalReaction.visitor.*;

/**
 * JTB node class for the production Reaction:<br>
 * Corresponding grammar:<br>
 * nodeChoice -> . %0 #0 ( AdditiveExpression() )?<br>
 * .......... .. . .. #1 ( Blank() )*<br>
 * .......... .. . .. #2 <ARROW><br>
 * .......... .. . .. #3 ( ( $0 ( " " )<br>
 * .......... .. . .. .. . . $1 ( Blank() )*<br>
 * .......... .. . .. .. . . $2 ( AdditiveExpression() )? ) )?<br>
 * .......... .. . .. #4 ( $0 ( Blank() )*<br>
 * .......... .. . .. .. . $1 ";"<br>
 * .......... .. . .. .. . $2 ( Blank() )*<br>
 * .......... .. . .. .. . $3 ListModifiers() )?<br>
 * .......... .. | %1 #0 <ARROW2><br>
 * .......... .. . .. #1 ( Blank() )*<br>
 * .......... .. . .. #2 ( AdditiveExpression() )?<br>
 * .......... .. . .. #3 ( $0 ( Blank() )*<br>
 * .......... .. . .. .. . $1 ";"<br>
 * .......... .. . .. .. . $2 ( Blank() )*<br>
 * .......... .. . .. .. . $3 ListModifiers() )?<br>
 */
public class Reaction implements INode {

  /** Child node 1 */
  public NodeChoice nodeChoice;

  /** The serial version UID */
  private static final long serialVersionUID = 147L;

  /**
   * Constructs the node with its child node.
   *
   * @param n0 - the child node
   */
  public Reaction(final NodeChoice n0) {
    nodeChoice = n0;
  }

  /**
   * Accepts the IRetArguVisitor visitor.
   *
   * @param <R> the user return type
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   * @return a user chosen return information
   */
  public <R, A> R accept(final IRetArguVisitor<R, A> vis, final A argu) {
    return vis.visit(this, argu);
  }

  /**
   * Accepts the IRetVisitor visitor.
   *
   * @param <R> the user return type
   * @param vis - the visitor
   * @return a user chosen return information
   */
  public <R> R accept(final IRetVisitor<R> vis) {
    return vis.visit(this);
  }

  /**
   * Accepts the IVoidArguVisitor visitor.
   *
   * @param <A> the user argument type
   * @param vis - the visitor
   * @param argu - a user chosen argument
   */
  public <A> void accept(final IVoidArguVisitor<A> vis, final A argu) {
    vis.visit(this, argu);
  }

  /**
   * Accepts the IVoidVisitor visitor.
   *
   * @param vis - the visitor
   */
  public void accept(final IVoidVisitor vis) {
    vis.visit(this);
  }

}
